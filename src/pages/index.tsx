import Head from 'next/head'
import Image from 'next/image'
import {Inter} from '@next/font/google'
import React, {useEffect, useState} from "react";
import styled from "styled-components";


const StyledH1 = styled.h1`
  font-family: serif;
  font-size: 2rem;
  color: #22262b;
`

const SubTitle = styled.h1`
  font-family: serif;
  font-size: 1.5rem;
  color: #1b304a;
`

const StyledProductForm = styled.form`
  display: flex;
  flex-direction: column;
  width: 80%;
  margin: auto;

  button {
    background-color: aqua;
    margin-top: 1rem;
  }
`;

const StyledAboutForm = styled.form`
  display: flex;
  flex-direction: column;
  width: 80%;
  margin: auto;
  background-color: cornsilk;

  button {
    background-color: cornflowerblue;
    margin-top: 1rem;
  }
`


interface Products {
    id: number;
    title: string;
    price: number;
    state: 'string'
}

const productList = [
    {
        id: 1,
        title: 'Car',
        price: 393929,
        state: 'New'
    },
    {
        id: 2,
        title: 'Plane',
        price: 32423424232,
        state: 'Used'
    },
    {
        id: 3,
        title: 'Helicopter',
        price: 4443,
        state: 'New'
    },
    {
        id: 4,
        title: 'Sail boat',
        price: 3554334,
        state: 'Broken'
    },
    {
        id: 5,
        title: 'Motor Cycle',
        price: 7655,
        state: 'New'
    },
    {
        id: 6,
        title: 'Bicycle',
        price: 786,
        state: 'New'
    },
    {
        id: 7,
        title: 'Scooter',
        price: 22,
        state: 'Broken'
    },
]

const StyledMenu = styled.ul`
  display: flex;
  list-style: none;

  li {
    margin-right: 10px;

    .about-link {
      font-weight: bold;
    }
  }
`;

interface UserInfoProps {
    firstName: string;
    lastName: string;
    password: string;
    notes: string;
    children?: any;
    color?: string;
}

const StyledList = styled.ul<UserInfoProps>`
  color: ${props => props.color ? props.color : 'green'}
`

const UserInfo = ({children, notes, password, lastName, firstName, color}: UserInfoProps) => {
    return (
        <div>
            <StyledList notes={notes} password={password} lastName={lastName} firstName={firstName} color={color}>
                <li>{firstName}</li>
                <li>{lastName}</li>
                <li>{notes}</li>
                <li>{password}</li>
            </StyledList>
            {children}
        </div>
    )
}


type routes = 'home' | 'products' | 'about'

export default function Home() {
    const [currentPage, setCurrentPage] = useState<routes>('home');
    const [productFormInputs, setProductFormInputs] = useState({
        productName: '',
        productPrice: '',
        productNumber: '',
        notes: ''
    });

    const [aboutFormInputs, setAboutFormInputs] = useState({
        firstName: '',
        lastName: '',
        password: '',
        email: '',
        notes: ''
    });


    return (
        <div>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <div>
                <img src='/images/logo.png' style={{'width': '200px', 'height': '100px'}}/>
                <StyledH1>Company</StyledH1>
                <StyledMenu>
                    <li>
                        <a onClick={() => setCurrentPage('home')}>Home</a>
                    </li>
                    <li>
                        <a onClick={() => setCurrentPage('products')}>Products</a>
                    </li>
                    <li>
                        <a className={'about-link'} onClick={() => setCurrentPage('about')}>About</a>
                    </li>
                </StyledMenu>
            </div>

            {
                currentPage === 'home' && (
                    <div>
                        <SubTitle>Home</SubTitle>
                        <UserInfo firstName={'John'} lastName={'Doe'}
                                  notes={'This is a note'} password={'password'} color={'pink'}/>
                        <a href='/about'>Go to about page</a>
                    </div>
                )
            }

            {
                currentPage === 'products' && (
                    <div>
                        <SubTitle>Products</SubTitle>
                        <StyledProductForm>
                            <label>Product name</label>
                            <input name='productName' value={productFormInputs.productName}
                                   onChange={(e) => setProductFormInputs({
                                       ...productFormInputs,
                                       [e.target.name]: e.target.value
                                   })}/>
                            <label>Product price</label>
                            <input name='productPrice' value={productFormInputs.productPrice}
                                   onChange={(e) => setProductFormInputs({
                                       ...productFormInputs,
                                       [e.target.name]: e.target.value
                                   })}/>
                            <label>Product number</label>
                            <input name='productNumber' value={productFormInputs.productNumber}
                                   onChange={(e) => setProductFormInputs({
                                       ...productFormInputs,
                                       [e.target.name]: e.target.value
                                   })}/>
                            <label>Notes</label>
                            <input name='notes' value={productFormInputs.notes} onChange={(e) => setProductFormInputs({
                                ...productFormInputs,
                                [e.target.name]: e.target.value
                            })}/>
                            <button>Submit</button>
                        </StyledProductForm>

                        <div>
                            {productList.map((product, index) => {
                                    return (
                                        <div key={index}>
                                            <h1>{product.title}</h1>
                                            <div>{product.state}</div>
                                            <div>{product.price}</div>
                                        </div>
                                    )
                                }
                            )}
                        </div>
                    </div>
                )
            }

            {
                currentPage === 'about' && (
                    <div>
                        <SubTitle>About</SubTitle>
                        <StyledAboutForm>
                            <label>First name</label>
                            <input name={'firstName'} value={aboutFormInputs.firstName}
                                   onChange={(e) => setAboutFormInputs({
                                       ...aboutFormInputs,
                                       [e.target.name]: e.target.value
                                   })}/>
                            <label>Last name</label>
                            <input name={'lastName'} value={aboutFormInputs.lastName} onChange={(e) => setAboutFormInputs({
                                ...aboutFormInputs,
                                [e.target.name]: e.target.value
                            })}/>
                            <label>Email</label>
                            <input name={'email'} value={aboutFormInputs.email} onChange={(e) => setAboutFormInputs({
                                ...aboutFormInputs,
                                [e.target.name]: e.target.value
                            })}/>
                            <label>Password</label>
                            <input name={'password'} value={aboutFormInputs.password} onChange={(e) => setAboutFormInputs({
                                ...aboutFormInputs,
                                [e.target.name]: e.target.value
                            })}/>
                            <label>Notes</label>
                            <input name={'notes'} value={aboutFormInputs.notes} onChange={(e) => setAboutFormInputs({
                                ...aboutFormInputs,
                                [e.target.name]: e.target.value
                            })}/>
                            <button>Submit</button>
                        </StyledAboutForm>
                        <UserInfo firstName={aboutFormInputs.firstName} lastName={aboutFormInputs.lastName}
                                  notes={aboutFormInputs.notes} password={aboutFormInputs.password}/>
                    </div>
                )
            }
        </div>
    )
}
